version: '3.8'
services:
  redis:
    build:
      context: .
      dockerfile: ./dockerfile/redis
    restart: always
    command: >
      redis-server /usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    volumes:
      - ./data/redis:/data
      - ./conf/redis.conf:/usr/local/etc/redis/redis.conf

  mysql:
    build:
      context: .
      dockerfile: ./dockerfile/mysql
    restart: always
    command: >
        --character-set-server=utf8mb4
        --collation-server=utf8mb4_unicode_ci
        --general_log=ON
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: general
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: UTC
    ports:
      - 3306:3306
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./init/mysql:/docker-entrypoint-initdb.d
  
  postgres:
    build:
      context: .
      dockerfile: ./dockerfile/postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: general
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/pgdata
      - ./init/postgres:/docker-entrypoint-initdb.d
    
  mariadb:
    build:
      context: .
      dockerfile: ./dockerfile/mariadb
    restart: always
    command: >
        --character-set-server=utf8mb4
        --collation-server=utf8mb4_unicode_ci
        --general_log=ON
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: general
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: UTC
    ports:
        - "3366:3306"
    volumes:
      - ./data/mariadb:/var/lib/mysql
      - ./init/mariadb:/docker-entrypoint-initdb.d
  
  memcached:
    build:
      context: .
      dockerfile: ./dockerfile/memcached
    restart: always
    ports:
      - 11211:11211
  
  mongo:
    build:
      context: .
      dockerfile: ./dockerfile/mongo
    restart: always
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    volumes:
      - ./conf/mongo.conf:/etc/mongo/mongod.conf
      - ./data/mongo:/data/db
 
  mongo-express:
    build:
      context: .
      dockerfile: ./dockerfile/mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
    ports:
      - 8081:8081
    depends_on:
      - mongo
  
  cassandra:
    build:
      context: .
      dockerfile: ./dockerfile/cassandra
    mem_limit: 2g
    restart: always
    environment:
      - CASSANDRA_USER=root
      - CASSANDRA_PASSWORD=root
      - MAX_HEAP_SIZE=256M
      - HEAP_NEWSIZE=128M
    ports:
      - 9042:9042
    volumes:
      - ./data/cassandra:/var/lib/cassandra

  cassandra-load-keyspace:
    container_name: cassandra-load-keyspace
    build:
      context: .
      dockerfile: ./dockerfile/cassandra
    command: >
      /bin/bash -c "sleep 60 &&
      echo loading cassandra keyspace &&
      cqlsh cassandra -f /files/schema.cql"
    depends_on:
      - cassandra
    volumes:
      - ./init/cassandra:/files
  
  dynamodb:
    build:
      context: .
      dockerfile: ./dockerfile/dynamodb
    restart: always
    user: root
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /data
    ports:
      - 8000:8000
    volumes:
      - ./data/dynamodb:/data
  
  neo4j:
    build:
      context: .
      dockerfile: ./dockerfile/neo4j
    restart: always
    environment:
      - NEO4J_dbms_memory_pagecache_size=2G
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./data/neo4j:/data
